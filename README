什么是IO多路复用？

IO多路复用是通过一种机制，可以监听多个文件描述符，一旦某个文件描述符就绪（一般是读或写就绪），就能够
通知程序进行相应的读写操作。IO复用虽然能同时监听多个文件描述符，但它本身是阻塞的。同时它也是一种同步
IO，因为它们都需要在读写事件就绪后自己负责进行读写。Linux下实现IO复用的主要机制有select、poll和epoll。

优点？

IO多路复用的优势并不是对于单个连接能处理的更快，而是在于可以在单个线程/进程中处理更多的连接。与多进程/
多线程技术相比，IO多路复用的最大优势是系统开销小。

select几个缺点:
(1)每次调用select，都需要把fd集合从用户态拷贝到内核态，这个开销在fd很多时会很大
(2)同时，每次调用select都需要在内核遍历传进来的所有fd，这个开销在fd很多时也很大
(3)select支持的文件描述符有限制，默认是1024
优点:
(1)可移植性好
(2)超时精度高

poll缺点：
(1)每次调用poll，都需要把fd集合从用户态拷贝到内核态，这个开销在fd很多时很大
(2)同时，每次调用poll都需要在内核遍历传进来的所有fd，这个开销在fd很多时也很大
优点:
(1)没有最大描述符限制

epoll:
(1)epoll每次注册新的事件到epoll句柄中，把所有的fd拷贝进内核，而不是在epoll_wait时候重复拷贝。epoll保证了
每个fd在整个过程中只会拷贝一次
(2)epoll采用回调的方式，当某个文件描述符就绪时，触发回调函数将其插入就绪队列-rdlist中
(3)epoll没有文件描述符的限制
